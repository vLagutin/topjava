Index: src/main/java/ru/javawebinar/topjava/model/MealWithExceed.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/model/MealWithExceed.java	(revision )
+++ src/main/java/ru/javawebinar/topjava/model/MealWithExceed.java	(revision )
@@ -0,0 +1,34 @@
+package ru.javawebinar.topjava.model;
+
+import java.time.LocalDateTime;
+
+/**
+ * GKislin
+ * 11.01.2015.
+ */
+public class MealWithExceed {
+    private final LocalDateTime dateTime;
+
+    private final String description;
+
+    private final int calories;
+
+    private final boolean exceed;
+
+    public MealWithExceed(LocalDateTime dateTime, String description, int calories, boolean exceed) {
+        this.dateTime = dateTime;
+        this.description = description;
+        this.calories = calories;
+        this.exceed = exceed;
+    }
+
+    @Override
+    public String toString() {
+        return "UserMealWithExceed{" +
+                "dateTime=" + dateTime +
+                ", description='" + description + '\'' +
+                ", calories=" + calories +
+                ", exceed=" + exceed +
+                '}';
+    }
+}
Index: src/main/java/ru/javawebinar/topjava/util/MealsUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/util/MealsUtil.java	(revision )
+++ src/main/java/ru/javawebinar/topjava/util/MealsUtil.java	(revision )
@@ -0,0 +1,47 @@
+package ru.javawebinar.topjava.util;
+
+import ru.javawebinar.topjava.model.Meal;
+import ru.javawebinar.topjava.model.MealWithExceed;
+
+import java.time.LocalDate;
+import java.time.LocalDateTime;
+import java.time.LocalTime;
+import java.time.Month;
+import java.util.Arrays;
+import java.util.List;
+import java.util.Map;
+import java.util.stream.Collectors;
+
+/**
+ * GKislin
+ * 31.05.2015.
+ */
+public class MealsUtil {
+    public static void main(String[] args) {
+        List<Meal> meals = Arrays.asList(
+                new Meal(LocalDateTime.of(2015, Month.MAY, 30, 10, 0), "Завтрак", 500),
+                new Meal(LocalDateTime.of(2015, Month.MAY, 30, 13, 0), "Обед", 1000),
+                new Meal(LocalDateTime.of(2015, Month.MAY, 30, 20, 0), "Ужин", 500),
+                new Meal(LocalDateTime.of(2015, Month.MAY, 31, 10, 0), "Завтрак", 1000),
+                new Meal(LocalDateTime.of(2015, Month.MAY, 31, 13, 0), "Обед", 500),
+                new Meal(LocalDateTime.of(2015, Month.MAY, 31, 20, 0), "Ужин", 510)
+        );
+        List<MealWithExceed> filteredMealsWithExceeded = getFilteredWithExceeded(meals, LocalTime.of(7, 0), LocalTime.of(12, 0), 2000);
+        filteredMealsWithExceeded.forEach(System.out::println);
+    }
+
+    public static List<MealWithExceed> getFilteredWithExceeded(List<Meal> meals, LocalTime startTime, LocalTime endTime, int caloriesPerDay) {
+        Map<LocalDate, Integer> caloriesSumByDate = meals.stream()
+                .collect(
+                        Collectors.groupingBy(Meal::getDate, Collectors.summingInt(Meal::getCalories))
+//                      Collectors.toMap(Meal::getDate, Meal::getCalories, Integer::sum)
+                );
+
+        return meals.stream()
+                .filter(meal -> TimeUtil.isBetween(meal.getTime(), startTime, endTime))
+                .map(meal ->
+                        new MealWithExceed(meal.getDateTime(), meal.getDescription(), meal.getCalories(),
+                                caloriesSumByDate.get(meal.getDate()) > caloriesPerDay))
+                .collect(Collectors.toList());
+    }
+}
\ No newline at end of file
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .gitignore	(date 1472469664000)
+++ .gitignore	(revision )
@@ -3,6 +3,4 @@
 target
 *.iml
 log
-
-
-
+*.patch
Index: src/main/java/ru/javawebinar/topjava/model/UserMealWithExceed.java
===================================================================
--- src/main/java/ru/javawebinar/topjava/model/UserMealWithExceed.java	(date 1472469664000)
+++ src/main/java/ru/javawebinar/topjava/model/UserMealWithExceed.java	(date 1472469664000)
@@ -1,24 +0,0 @@
-package ru.javawebinar.topjava.model;
-
-import java.time.LocalDateTime;
-
-/**
- * GKislin
- * 11.01.2015.
- */
-public class UserMealWithExceed {
-    private final LocalDateTime dateTime;
-
-    private final String description;
-
-    private final int calories;
-
-    private final boolean exceed;
-
-    public UserMealWithExceed(LocalDateTime dateTime, String description, int calories, boolean exceed) {
-        this.dateTime = dateTime;
-        this.description = description;
-        this.calories = calories;
-        this.exceed = exceed;
-    }
-}
Index: src/main/java/ru/javawebinar/topjava/model/UserMeal.java
===================================================================
--- src/main/java/ru/javawebinar/topjava/model/UserMeal.java	(date 1472469664000)
+++ src/main/java/ru/javawebinar/topjava/model/Meal.java	(revision )
@@ -1,19 +1,21 @@
 package ru.javawebinar.topjava.model;
 
+import java.time.LocalDate;
 import java.time.LocalDateTime;
+import java.time.LocalTime;
 
 /**
  * GKislin
  * 11.01.2015.
  */
-public class UserMeal {
+public class Meal {
     private final LocalDateTime dateTime;
 
     private final String description;
 
     private final int calories;
 
-    public UserMeal(LocalDateTime dateTime, String description, int calories) {
+    public Meal(LocalDateTime dateTime, String description, int calories) {
         this.dateTime = dateTime;
         this.description = description;
         this.calories = calories;
@@ -29,5 +31,13 @@
 
     public int getCalories() {
         return calories;
+    }
+
+    public LocalDate getDate() {
+        return dateTime.toLocalDate();
+    }
+
+    public LocalTime getTime() {
+        return dateTime.toLocalTime();
     }
 }
Index: src/main/java/ru/javawebinar/topjava/util/UserMealsUtil.java
===================================================================
--- src/main/java/ru/javawebinar/topjava/util/UserMealsUtil.java	(date 1472469664000)
+++ src/main/java/ru/javawebinar/topjava/util/UserMealsUtil.java	(date 1472469664000)
@@ -1,35 +0,0 @@
-package ru.javawebinar.topjava.util;
-
-import ru.javawebinar.topjava.model.UserMeal;
-import ru.javawebinar.topjava.model.UserMealWithExceed;
-
-import java.time.LocalDateTime;
-import java.time.LocalTime;
-import java.time.Month;
-import java.util.Arrays;
-import java.util.List;
-
-/**
- * GKislin
- * 31.05.2015.
- */
-public class UserMealsUtil {
-    public static void main(String[] args) {
-        List<UserMeal> mealList = Arrays.asList(
-                new UserMeal(LocalDateTime.of(2015, Month.MAY, 30,10,0), "Завтрак", 500),
-                new UserMeal(LocalDateTime.of(2015, Month.MAY, 30,13,0), "Обед", 1000),
-                new UserMeal(LocalDateTime.of(2015, Month.MAY, 30,20,0), "Ужин", 500),
-                new UserMeal(LocalDateTime.of(2015, Month.MAY, 31,10,0), "Завтрак", 1000),
-                new UserMeal(LocalDateTime.of(2015, Month.MAY, 31,13,0), "Обед", 500),
-                new UserMeal(LocalDateTime.of(2015, Month.MAY, 31,20,0), "Ужин", 510)
-        );
-        getFilteredWithExceeded(mealList, LocalTime.of(7, 0), LocalTime.of(12,0), 2000);
-//        .toLocalDate();
-//        .toLocalTime();
-    }
-
-    public static List<UserMealWithExceed>  getFilteredWithExceeded(List<UserMeal> mealList, LocalTime startTime, LocalTime endTime, int caloriesPerDay) {
-        // TODO return filtered list with correctly exceeded field
-        return null;
-    }
-}
